<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.StudentMapper">

    <select id="getStudentCount" resultType="long">
        SELECT COUNT(*) FROM student s
        LEFT JOIN clazz c ON s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="no != null and no != ''">
                AND s.no LIKE CONCAT('%', #{no}, '%')
            </if>
            <if test="gender != null">
                AND s.gender = #{gender}
            </if>
            <if test="clazzId != null">
                AND s.clazz_id = #{clazzId}
            </if>
            <if test="degree != null">
                AND s.degree = #{degree}
            </if>
        </where>
    </select>

    <select id="getStudentList" resultType="com.example.pojo.Student">
        SELECT
        s.*,
        c.name as clazzName
        FROM student s
        LEFT JOIN clazz c ON s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="no != null and no != ''">
                AND s.no LIKE CONCAT('%', #{no}, '%')
            </if>
            <if test="gender != null">
                AND s.gender = #{gender}
            </if>
            <if test="clazzId != null">
                AND s.clazz_id = #{clazzId}
            </if>
            <if test="degree != null">
                AND s.degree = #{degree}
            </if>
        </where>
        ORDER BY s.update_time DESC
    </select>

    <!-- 根据ID查询学生 -->
    <select id="findStudentById" resultType="com.example.pojo.Student">
        SELECT
            s.*,
            c.name as clazzName
        FROM student s
                 LEFT JOIN clazz c ON s.clazz_id = c.id
        WHERE s.id = #{id}
    </select>
    <select id="studentEducationData" resultType="java.util.Map">
        SELECT
            CASE degree
                WHEN 1 THEN '初中'
                WHEN 2 THEN '高中'
                WHEN 3 THEN '大专'
                WHEN 4 THEN '本科'
                WHEN 5 THEN '硕士'
                WHEN 6 THEN '博士'
                END as name,
            COUNT(*) as value
        FROM student
        GROUP BY degree
        ORDER BY degree
    </select>


    <!-- 批量删除学生 -->
    <delete id="deleteStudents">
        DELETE FROM student WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新学生信息 -->
    <update id="updateStudent">
        UPDATE student
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="no != null">no = #{no},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="idCard != null">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null">address = #{address},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
            <if test="violationCount != null">violation_count = #{violationCount},</if>
            <if test="violationScore != null">violation_score = #{violationScore},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>
<!--    违纪学生处理-->
    <update id="handleViolation">
        UPDATE student
        SET violation_count = violation_count + 1,
            violation_score = violation_score + #{score},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 添加学生 -->
    <insert id="addStudent">
        INSERT INTO student (
            name, no, gender, phone, id_card, is_college,
            address, degree, graduation_date, clazz_id,
            violation_count, violation_score,
            create_time, update_time
        ) VALUES (
                     #{name}, #{no}, #{gender}, #{phone}, #{idCard}, #{isCollege},
                     #{address}, #{degree}, #{graduationDate}, #{clazzId},
                     #{violationCount}, #{violationScore},
                     #{createTime}, #{updateTime}
                 )
    </insert>
</mapper>